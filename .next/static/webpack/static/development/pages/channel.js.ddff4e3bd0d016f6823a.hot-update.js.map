{"version":3,"file":"static/webpack/static\\development\\pages\\channel.js.ddff4e3bd0d016f6823a.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///./pages/channel.js"],"sourcesContent":["import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArrayLimit(arr, i) {\n  if (!(_isIterable(Object(arr)) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default class extends React.Component{\r\n\r\n    static async getInitialProps({ query }){\r\n        let idChannel = query.id\r\n\r\n        let [reqChannel, reqAudios, reqSeries] = await Promise.all([\r\n            fetch  (`https://api.audioboom.com/channels/${idChannel}`),\r\n            fetch  (`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\r\n            fetch  (`https://api.audioboom.com/channels/${idChannel}/child_channels`)\r\n\r\n        ])\r\n\r\n        \r\n        let dataChannel = await reqChannel.json()\r\n        let channel = dataChannel.body.channel\r\n\r\n        let dataAudios = await reqAudios.json()\r\n        let audioClips = dataAudios.body.audio_clips\r\n\r\n        let dataSeries = await reqSeries.json()\r\n        let series = dataSeries.body.channels\r\n        \r\n        return { channel, audioClips, series }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { channel, audioClips, series } = this.props\r\n        return <div>\r\n            <header>Podcast</header>\r\n\r\n            <h1>{ channel.title }</h1>\r\n            \r\n            <h2>series</h2>\r\n            { series.map((serie)=>(\r\n                <div>{serie.title}</div>\r\n            ))}\r\n\r\n            <h2>Ultimos Podcast</h2>\r\n            { audioClips.map((clip)=>(\r\n                <div>{ clip.title }</div>\r\n            ))}\r\n\r\n         \r\n\r\n            <style jsx>{`\r\n                header {\r\n                    color: #fff;\r\n                    background: #8756ca;\r\n                    padding: 15px;\r\n                    text-align: center;\r\n                    \r\n                }\r\n                .channels {\r\n                    display: grid;\r\n                    grid-gap: 15px;\r\n                    padding: 15px;\r\n                    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n                }\r\n                .channel {\r\n                    display: block;\r\n                    border-radius: 3px;\r\n                    box-shadow: 0px 2px rgba(0,0,0,0.15);\r\n                    margin-bottom: 0.5em;\r\n                }\r\n\r\n                a.channel {\r\n                    display: block;\r\n                   margin-bottom: 0.5em;\r\n                   color: #333;\r\n                   text-decoration: none;\r\n                }\r\n\r\n                .channel img{\r\n                    border-radius: 3px;\r\n                    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15 );\r\n                    width; 100%\r\n                }\r\n\r\n                h1{\r\n                    font-weight: 600;\r\n                    padding: 15px;\r\n\r\n                }\r\n\r\n                h2{\r\n                    padding: 5px;\r\n                    font-size: 0.9em;\r\n                    font-weight: 600;\r\n                    margin: 0;\r\n                    text-align: center;\r\n                }\r\n                `}\r\n                \r\n                </style>\r\n\r\n                <style jsx global>{`\r\n                body {\r\n                    margin: 0;\r\n                    font-famiily: system-ui;\r\n                    background: white;\r\n                };\r\n                `}</style>\r\n        </div>\r\n    }\r\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9BA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqBA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4EA;;;;;;;;;;AAtGA;AACA;;AAEA;AACA;;;;AADA;AAAA;AAAA;;AAQA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAvBA;AACA;;;;;A","sourceRoot":""}